<project name="sqlxmlast" xmlns:au="antlib:org.apache.ant.antunit" basedir="../../..">
    <macrodef name="doxslt">
        <attribute name="extension" default=".xml"/>
        <attribute name="basedir" default="target/sqlxmlast"/>
        <attribute name="destdir" default="target/sqlxmlshort"/>
        <attribute name="style" default="src/main/stylesheets/sqlxmlast-shorten.xsl"/>
        <sequential>
            <xslt extension="@{extension}" basedir="@{basedir}" destdir="@{destdir}"
                  style="@{style}">
                <factory name="net.sf.saxon.TransformerFactoryImpl"/>
                <classpath refid="cp"/>
                <include name="**/*.xml"/>
            </xslt>
        </sequential>
    </macrodef>
    <!--
   test setUp
    -->
    <target name="setUp">
        <echo>setup</echo>
        <propertyset refid="test_context"/>
        <echo>-- test_classpath=${test_classpath}</echo>
        <echo>-- basedir=${basedir}</echo>
    </target>

    <target name="testOracle">
        <property name="s1" value="examples/plsql"/>
        <property name="d1" value="target/sqlxmlast/plsql"/>
        <au:assertFileDoesntExist file="${d1}"/>
        <sqlxmlast grammar="oracle"
                   basedir="${s1}"
                   destdir="${d1}"
                   failontransformationerror="yes">
            <filename name="**/*.sql"/>
        </sqlxmlast>
        <au:assertFileExists file="${d1}"/>
    </target>
    <target name="testSybase">
        <property name="s2" value="examples/tsql"/>
        <property name="d2" value="target/sqlxmlast/tsql"/>
        <au:assertFileDoesntExist file="${d1}"/>
        <sqlxmlast grammar="sybase"
                   basedir="${s2}"
                   destdir="${d2}"
                   failontransformationerror="yes">
            <filename name="**/*.sql"/>
        </sqlxmlast>
        <au:assertFileExists file="${d2}"/>
    </target>
    <target name="testJava">
        <property name="s2" value="examples/java8"/>
        <property name="d2" value="target/sqlxmlast/java8"/>
        <au:assertFileDoesntExist file="${d1}"/>
        <sqlxmlast grammar="java8"
                   basedir="${s2}"
                   destdir="${d2}"
                   failontransformationerror="yes">
            <filename name="**/*.java"/>
        </sqlxmlast>
        <au:assertFileExists file="${d2}"/>
    </target>
    <target name="testAntlr">
        <property name="s2" value="examples/antlr4"/>
        <property name="d2" value="target/sqlxmlast/antlr4"/>
        <au:assertFileDoesntExist file="${d1}"/>
        <sqlxmlast grammar="antlr4"
                   basedir="${s2}"
                   destdir="${d2}"
                   failontransformationerror="yes">
            <filename name="**/*.g4"/>
        </sqlxmlast>
        <au:assertFileExists file="${d2}"/>
    </target>

    <target name="testJsonStructure">
        <property name="sqlxmlast" value="${basedir}/target/sqlxmlast"/>
        <property name="sqlxmlshort" value="${basedir}/target/sqlxmlshort"/>
        <property name="sqlxmljson" value="${basedir}/target/sqlxmljson"/>
        <property name="jsonast" value="${basedir}/target/jsonast"/>

        <xslt extension=".xml" basedir="${sqlxmlast}" destdir="${sqlxmlshort}"
              style="src/main/stylesheets/sqlxmlast-shorten.xsl"
              classpath="${test_classpath}">
            <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <include name="**/*.xml"/>
        </xslt>
        <xslt extension=".xml" basedir="${sqlxmlshort}" destdir="${sqlxmljson}"
              style="src/main/stylesheets/sqlxmlast-json-stucture.xsl"
              classpath="${test_classpath}">
            <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <include name="**/*.xml"/>
        </xslt>
        <xslt extension=".json" basedir="${sqlxmljson}" destdir="${jsonast}"
              style="src/main/stylesheets/sqlxmlast-to-json.xsl"
              classpath="${test_classpath}">
            <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <include name="**/*.xml"/>
        </xslt>
    </target>
    <target name="tearDown">
        <echo>tearDown</echo>
    </target>
</project>